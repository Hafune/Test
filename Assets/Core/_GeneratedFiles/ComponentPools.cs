//Файл генерируется в GenComponentPools
using Core.Components;
using Leopotam.EcsLite;

namespace Core.Generated
{
    // @formatter:off
    public class ComponentPools
    {
        public readonly EcsPool<AbilitiesSlotComponent> AbilitiesSlot;
        public readonly EcsPool<ActionButton1Component> ActionButton1;
        public readonly EcsPool<ActionButton2Component> ActionButton2;
        public readonly EcsPool<ActionButton3Component> ActionButton3;
        public readonly EcsPool<ActionButton4Component> ActionButton4;
        public readonly EcsPool<ActionCurrentComponent> ActionCurrent;
        public readonly EcsPool<ActionDeathComponent> ActionDeath;
        public readonly EcsPool<ActionIdleComponent> ActionIdle;
        public readonly EcsPool<ActionMouseLeftComponent> ActionMouseLeft;
        public readonly EcsPool<ActionMouseRightComponent> ActionMouseRight;
        public readonly EcsPool<ActionMoveComponent> ActionMove;
        public readonly EcsPool<ActionReviveComponent> ActionRevive;
        public readonly EcsPool<ActiveArea<CollectableAreaComponent>> ActiveAreaCollectableArea;
        public readonly EcsPool<ActiveArea<DamageAreaComponent>> ActiveAreaDamageArea;
        public readonly EcsPool<ActiveArea<ImpactAreaComponent>> ActiveAreaImpactArea;
        public readonly EcsPool<ActiveArea<ReceiverAreaComponent>> ActiveAreaReceiverArea;
        public readonly EcsPool<AddScoreOnDeathValueComponent> AddScoreOnDeathValue;
        public readonly EcsPool<AngularSpeedValueComponent> AngularSpeedValue;
        public readonly EcsPool<AnimatorComponent> Animator;
        public readonly EcsPool<AnimatorStateComponent> AnimatorState;
        public readonly EcsPool<AreaResetReceiversComponent> AreaResetReceivers;
        public readonly EcsPool<AttackSpeedValueComponent> AttackSpeedValue;
        public readonly EcsPool<BaseValueComponent<AddScoreOnDeathValueComponent>> BaseAddScoreOnDeathValue;
        public readonly EcsPool<BaseValueComponent<AngularSpeedValueComponent>> BaseAngularSpeedValue;
        public readonly EcsPool<BaseValueComponent<AttackSpeedValueComponent>> BaseAttackSpeedValue;
        public readonly EcsPool<BaseValueComponent<CriticalChanceValueComponent>> BaseCriticalChanceValue;
        public readonly EcsPool<BaseValueComponent<CriticalDamageValueComponent>> BaseCriticalDamageValue;
        public readonly EcsPool<BaseValueComponent<DamageOrbValueComponent>> BaseDamageOrbValue;
        public readonly EcsPool<BaseValueComponent<DamagePercentValueComponent>> BaseDamagePercentValue;
        public readonly EcsPool<BaseValueComponent<DamageValueComponent>> BaseDamageValue;
        public readonly EcsPool<BaseValueComponent<DefenceValueComponent>> BaseDefenceValue;
        public readonly EcsPool<BaseValueComponent<EnergyMaxValueComponent>> BaseEnergyMaxValue;
        public readonly EcsPool<BaseValueComponent<EnergyValueComponent>> BaseEnergyValue;
        public readonly EcsPool<BaseValueComponent<ExperienceValueComponent>> BaseExperienceValue;
        public readonly EcsPool<BaseValueComponent<HealingPotionMaxValueComponent>> BaseHealingPotionMaxValue;
        public readonly EcsPool<BaseValueComponent<HealingPotionValueComponent>> BaseHealingPotionValue;
        public readonly EcsPool<BaseValueComponent<HitPointMaxValueComponent>> BaseHitPointMaxValue;
        public readonly EcsPool<BaseValueComponent<HitPointPercentValueComponent>> BaseHitPointPercentValue;
        public readonly EcsPool<BaseValueComponent<HitPointValueComponent>> BaseHitPointValue;
        public readonly EcsPool<BaseValueComponent<LivesValueComponent>> BaseLivesValue;
        public readonly EcsPool<BaseValueComponent<ManaPointMaxValueComponent>> BaseManaPointMaxValue;
        public readonly EcsPool<BaseValueComponent<ManaPointValueComponent>> BaseManaPointValue;
        public readonly EcsPool<BaseValueComponent<MoveSpeedValueComponent>> BaseMoveSpeedValue;
        public readonly EcsPool<BaseValueComponent<RecoverySpeedValueComponent<HitPointValueComponent>>> BaseRecoverySpeedHitPointValue;
        public readonly EcsPool<BaseValueComponent<RecoverySpeedValueComponent<ManaPointValueComponent>>> BaseRecoverySpeedManaPointValue;
        public readonly EcsPool<BaseValueComponent<ScoreValueComponent>> BaseScoreValue;
        public readonly EcsPool<BaseValueComponent<ShockWaveValueComponent>> BaseShockWaveValue;
        public readonly EcsPool<BehaviorTreeComponent> BehaviorTree;
        public readonly EcsPool<BehaviourActivateAreaComponent> BehaviourActivateArea;
        public readonly EcsPool<ButtonDashTag> ButtonDash;
        public readonly EcsPool<ButtonDown> ButtonDown;
        public readonly EcsPool<ButtonHorizontalTag> ButtonHorizontal;
        public readonly EcsPool<ButtonJumpTag> ButtonJump;
        public readonly EcsPool<ButtonLeft> ButtonLeft;
        public readonly EcsPool<ButtonLightAttackTag> ButtonLightAttack;
        public readonly EcsPool<ButtonRight> ButtonRight;
        public readonly EcsPool<ButtonStrongAttackTag> ButtonStrongAttack;
        public readonly EcsPool<ButtonUp> ButtonUp;
        public readonly EcsPool<ButtonUseHealing> ButtonUseHealing;
        public readonly EcsPool<CharacterControllerComponent> CharacterController;
        public readonly EcsPool<CollectableAreaComponent> CollectableArea;
        public readonly EcsPool<CollectableExperienceComponent> CollectableExperience;
        public readonly EcsPool<CollectableGemComponent> CollectableGem;
        public readonly EcsPool<CollectableHealingComponent> CollectableHealing;
        public readonly EcsPool<CollectableItemComponent> CollectableItem;
        public readonly EcsPool<CollectableKeyGoldComponent> CollectableKeyGold;
        public readonly EcsPool<CollectableKeySilverComponent> CollectableKeySilver;
        public readonly EcsPool<CollectableLiveUpTag> CollectableLiveUp;
        public readonly EcsPool<CollectablePowerUpTag> CollectablePowerUp;
        public readonly EcsPool<CriticalChanceValueComponent> CriticalChanceValue;
        public readonly EcsPool<CriticalDamageValueComponent> CriticalDamageValue;
        public readonly EcsPool<DamageAreaComponent> DamageArea;
        public readonly EcsPool<DamageOrbComponent> DamageOrb;
        public readonly EcsPool<DamageOrbParentComponent> DamageOrbParent;
        public readonly EcsPool<DamageOrbPrefabComponent> DamageOrbPrefab;
        public readonly EcsPool<DamageOrbSlotTag> DamageOrbSlot;
        public readonly EcsPool<DamageOrbValueComponent> DamageOrbValue;
        public readonly EcsPool<DamagePercentValueComponent> DamagePercentValue;
        public readonly EcsPool<DamageScaleComponent> DamageScale;
        public readonly EcsPool<DamageValueComponent> DamageValue;
        public readonly EcsPool<DeathOnDealDamageTag> DeathOnDealDamage;
        public readonly EcsPool<DeathOnTouchTag> DeathOnTouch;
        public readonly EcsPool<DebugEnemyTag> DebugEnemy;
        public readonly EcsPool<DefenceValueComponent> DefenceValue;
        public readonly EcsPool<DependsByExternalLevelTag> DependsByExternalLevel;
        public readonly EcsPool<DirectionComponent> Direction;
        public readonly EcsPool<DoubleJumpSlotTag> DoubleJumpSlot;
        public readonly EcsPool<DropOnDeathComponent> DropOnDeath;
        public readonly EcsPool<EnemyTag> Enemy;
        public readonly EcsPool<EnergyMaxValueComponent> EnergyMaxValue;
        public readonly EcsPool<EnergyValueComponent> EnergyValue;
        public readonly EcsPool<EnhancementSlotComponent> EnhancementSlot;
        public readonly EcsPool<EventActionComplete> EventActionComplete;
        public readonly EcsPool<EventActionStart<ActionDeathComponent>> EventStartActionDeath;
        public readonly EcsPool<EventActionStart<ActionIdleComponent>> EventStartActionIdle;
        public readonly EcsPool<EventActionStart<ActionMoveComponent>> EventStartActionMove;
        public readonly EcsPool<EventActionStart<ActionReviveComponent>> EventStartActionRevive;
        public readonly EcsPool<EventActionStart<NpcActionComponent>> EventStartNpcAction;
        public readonly EcsPool<EventBehaviorTreeActionStartFailedCheck> EventBehaviorTreeActionStartFailedCheck;
        public readonly EcsPool<EventBehaviorTreeActivate> EventBehaviorTreeActivate;
        public readonly EcsPool<EventBehaviorTreeDeactivate> EventBehaviorTreeDeactivate;
        public readonly EcsPool<EventBuildEntity> EventBuildEntity;
        public readonly EcsPool<EventButtonCanceled<ButtonLightAttackTag>> EventButtonCanceledButtonLightAttack;
        public readonly EcsPool<EventButtonCanceled<ButtonStrongAttackTag>> EventButtonCanceledButtonStrongAttack;
        public readonly EcsPool<EventButtonPerformed<ButtonDashTag>> EventButtonPerformedButtonDash;
        public readonly EcsPool<EventButtonPerformed<ButtonJumpTag>> EventButtonPerformedButtonJump;
        public readonly EcsPool<EventButtonPerformed<ButtonLightAttackTag>> EventButtonPerformedButtonLightAttack;
        public readonly EcsPool<EventButtonPerformed<ButtonStrongAttackTag>> EventButtonPerformedButtonStrongAttack;
        public readonly EcsPool<EventButtonPerformed<ButtonUseHealing>> EventButtonPerformedButtonUseHealing;
        public readonly EcsPool<EventCameraShakeComponent> EventCameraShake;
        public readonly EcsPool<EventCancelProgress<ShotTriggerComponent>> EventCancelProgressShotTrigger;
        public readonly EcsPool<EventCausedDamage> EventCausedDamage;
        public readonly EcsPool<EventDamageTaken> EventDamageTaken;
        public readonly EcsPool<EventDeath> EventDeath;
        public readonly EcsPool<EventDeTouchWall> EventDeTouchWall;
        public readonly EcsPool<EventEnableOutlinable> EventEnableOutlinable;
        public readonly EcsPool<EventFreezing> EventFreezing;
        public readonly EcsPool<EventHitTaken> EventHitTaken;
        public readonly EcsPool<EventImpactVelocity> EventImpactVelocity;
        public readonly EcsPool<EventIncomingDamage> EventIncomingDamage;
        public readonly EcsPool<EventInit> EventInit;
        public readonly EcsPool<EventInteractionTargetClick> EventInteractionTargetClick;
        public readonly EcsPool<EventKnockback> EventKnockback;
        public readonly EcsPool<EventKnockdown> EventKnockdown;
        public readonly EcsPool<EventLanding> EventLanding;
        public readonly EcsPool<EventLaunching> EventLaunching;
        public readonly EcsPool<EventMagnetAreaTouch> EventMagnetAreaTouch;
        public readonly EcsPool<EventRefreshSlot<AbilitiesSlotComponent>> EventRefreshAbilitiesSlot;
        public readonly EcsPool<EventRefreshSlot<EnhancementSlotComponent>> EventRefreshEnhancementSlot;
        public readonly EcsPool<EventRefreshSlot<MagicGemSlotComponent>> EventRefreshMagicGemSlot;
        public readonly EcsPool<EventRefreshSlot<TestSlotComponent>> EventRefreshTestSlot;
        public readonly EcsPool<EventRefreshSlot<WeaponSlotComponent>> EventRefreshWeaponSlot;
        public readonly EcsPool<EventRemoveEntity> EventRemoveEntity;
        public readonly EcsPool<EventRestoreConsumables> EventRestoreConsumables;
        public readonly EcsPool<EventScanHierarchyForNestedEntities> EventScanHierarchyForNestedEntities;
        public readonly EcsPool<EventSelectEnemyTarget> EventSelectEnemyTarget;
        public readonly EcsPool<EventSetupForwardVelocity> EventSetupForwardVelocity;
        public readonly EcsPool<EventSetupModule<ShotTriggerComponent>> EventSetupModuleShotTrigger;
        public readonly EcsPool<EventSetupParentComponent<ThroughProjectileSlotTag>> EventSetupParentThroughProjectileSlot;
        public readonly EcsPool<EventSetupParentValue<CriticalChanceValueComponent>> EventSetupParentValueCriticalChanceValue;
        public readonly EcsPool<EventSetupParentValue<CriticalDamageValueComponent>> EventSetupParentValueCriticalDamageValue;
        public readonly EcsPool<EventSetupParentValue<DamageValueComponent>> EventSetupParentValueDamageValue;
        public readonly EcsPool<EventSetupVelocity> EventSetupVelocity;
        public readonly EcsPool<EventSlash> EventSlash;
        public readonly EcsPool<EventStartProgress<ShotTriggerComponent>> EventStartProgressShotTrigger;
        public readonly EcsPool<EventStartRecalculateValue<AddScoreOnDeathValueComponent>> EventStartRecalculateAddScoreOnDeathValue;
        public readonly EcsPool<EventStartRecalculateValue<AngularSpeedValueComponent>> EventStartRecalculateAngularSpeedValue;
        public readonly EcsPool<EventStartRecalculateValue<AttackSpeedValueComponent>> EventStartRecalculateAttackSpeedValue;
        public readonly EcsPool<EventStartRecalculateValue<CriticalChanceValueComponent>> EventStartRecalculateCriticalChanceValue;
        public readonly EcsPool<EventStartRecalculateValue<CriticalDamageValueComponent>> EventStartRecalculateCriticalDamageValue;
        public readonly EcsPool<EventStartRecalculateValue<DamageOrbValueComponent>> EventStartRecalculateDamageOrbValue;
        public readonly EcsPool<EventStartRecalculateValue<DamagePercentValueComponent>> EventStartRecalculateDamagePercentValue;
        public readonly EcsPool<EventStartRecalculateValue<DamageValueComponent>> EventStartRecalculateDamageValue;
        public readonly EcsPool<EventStartRecalculateValue<DefenceValueComponent>> EventStartRecalculateDefenceValue;
        public readonly EcsPool<EventStartRecalculateValue<EnergyMaxValueComponent>> EventStartRecalculateEnergyMaxValue;
        public readonly EcsPool<EventStartRecalculateValue<EnergyValueComponent>> EventStartRecalculateEnergyValue;
        public readonly EcsPool<EventStartRecalculateValue<ExperienceValueComponent>> EventStartRecalculateExperienceValue;
        public readonly EcsPool<EventStartRecalculateValue<HealingPotionMaxValueComponent>> EventStartRecalculateHealingPotionMaxValue;
        public readonly EcsPool<EventStartRecalculateValue<HealingPotionValueComponent>> EventStartRecalculateHealingPotionValue;
        public readonly EcsPool<EventStartRecalculateValue<HitPointMaxValueComponent>> EventStartRecalculateHitPointMaxValue;
        public readonly EcsPool<EventStartRecalculateValue<HitPointPercentValueComponent>> EventStartRecalculateHitPointPercentValue;
        public readonly EcsPool<EventStartRecalculateValue<HitPointValueComponent>> EventStartRecalculateHitPointValue;
        public readonly EcsPool<EventStartRecalculateValue<LivesValueComponent>> EventStartRecalculateLivesValue;
        public readonly EcsPool<EventStartRecalculateValue<ManaPointMaxValueComponent>> EventStartRecalculateManaPointMaxValue;
        public readonly EcsPool<EventStartRecalculateValue<ManaPointValueComponent>> EventStartRecalculateManaPointValue;
        public readonly EcsPool<EventStartRecalculateValue<MoveSpeedValueComponent>> EventStartRecalculateMoveSpeedValue;
        public readonly EcsPool<EventStartRecalculateValue<ReceiverClientComponent>> EventStartRecalculateReceiverClient;
        public readonly EcsPool<EventStartRecalculateValue<RecoverySpeedValueComponent<HitPointValueComponent>>> EventStartRecalculateRecoverySpeedHitPointValue;
        public readonly EcsPool<EventStartRecalculateValue<RecoverySpeedValueComponent<ManaPointValueComponent>>> EventStartRecalculateRecoverySpeedManaPointValue;
        public readonly EcsPool<EventStartRecalculateValue<ScoreValueComponent>> EventStartRecalculateScoreValue;
        public readonly EcsPool<EventStartRecalculateValue<ShockWaveValueComponent>> EventStartRecalculateShockWaveValue;
        public readonly EcsPool<EventTimeDilation> EventTimeDilation;
        public readonly EcsPool<EventTimelineAction> EventTimelineAction;
        public readonly EcsPool<EventTouchWall> EventTouchWall;
        public readonly EcsPool<EventValueUpdated<AddScoreOnDeathValueComponent>> EventUpdatedAddScoreOnDeathValue;
        public readonly EcsPool<EventValueUpdated<AngularSpeedValueComponent>> EventUpdatedAngularSpeedValue;
        public readonly EcsPool<EventValueUpdated<AttackSpeedValueComponent>> EventUpdatedAttackSpeedValue;
        public readonly EcsPool<EventValueUpdated<CriticalChanceValueComponent>> EventUpdatedCriticalChanceValue;
        public readonly EcsPool<EventValueUpdated<CriticalDamageValueComponent>> EventUpdatedCriticalDamageValue;
        public readonly EcsPool<EventValueUpdated<DamageOrbValueComponent>> EventUpdatedDamageOrbValue;
        public readonly EcsPool<EventValueUpdated<DamagePercentValueComponent>> EventUpdatedDamagePercentValue;
        public readonly EcsPool<EventValueUpdated<DamageValueComponent>> EventUpdatedDamageValue;
        public readonly EcsPool<EventValueUpdated<DefenceValueComponent>> EventUpdatedDefenceValue;
        public readonly EcsPool<EventValueUpdated<EnergyMaxValueComponent>> EventUpdatedEnergyMaxValue;
        public readonly EcsPool<EventValueUpdated<EnergyValueComponent>> EventUpdatedEnergyValue;
        public readonly EcsPool<EventValueUpdated<ExperienceValueComponent>> EventUpdatedExperienceValue;
        public readonly EcsPool<EventValueUpdated<HealingPotionMaxValueComponent>> EventUpdatedHealingPotionMaxValue;
        public readonly EcsPool<EventValueUpdated<HealingPotionValueComponent>> EventUpdatedHealingPotionValue;
        public readonly EcsPool<EventValueUpdated<HitPointMaxValueComponent>> EventUpdatedHitPointMaxValue;
        public readonly EcsPool<EventValueUpdated<HitPointPercentValueComponent>> EventUpdatedHitPointPercentValue;
        public readonly EcsPool<EventValueUpdated<HitPointValueComponent>> EventUpdatedHitPointValue;
        public readonly EcsPool<EventValueUpdated<LivesValueComponent>> EventUpdatedLivesValue;
        public readonly EcsPool<EventValueUpdated<ManaPointMaxValueComponent>> EventUpdatedManaPointMaxValue;
        public readonly EcsPool<EventValueUpdated<ManaPointValueComponent>> EventUpdatedManaPointValue;
        public readonly EcsPool<EventValueUpdated<MoveSpeedValueComponent>> EventUpdatedMoveSpeedValue;
        public readonly EcsPool<EventValueUpdated<RecoverySpeedValueComponent<HitPointValueComponent>>> EventUpdatedRecoverySpeedHitPointValue;
        public readonly EcsPool<EventValueUpdated<RecoverySpeedValueComponent<ManaPointValueComponent>>> EventUpdatedRecoverySpeedManaPointValue;
        public readonly EcsPool<EventValueUpdated<ScoreValueComponent>> EventUpdatedScoreValue;
        public readonly EcsPool<EventValueUpdated<ShockWaveValueComponent>> EventUpdatedShockWaveValue;
        public readonly EcsPool<EventVirtualCameraFollowSetup> EventVirtualCameraFollowSetup;
        public readonly EcsPool<ExperienceValueComponent> ExperienceValue;
        public readonly EcsPool<ForceRefreshTargetComponent> ForceRefreshTarget;
        public readonly EcsPool<FreezingComponent> Freezing;
        public readonly EcsPool<FriendTag> Friend;
        public readonly EcsPool<HealingPotionMaxValueComponent> HealingPotionMaxValue;
        public readonly EcsPool<HealingPotionValueComponent> HealingPotionValue;
        public readonly EcsPool<HitBlinkComponent> HitBlink;
        public readonly EcsPool<HitEffectSpriteComponent> HitEffectSprite;
        public readonly EcsPool<HitImpactEventsComponent> HitImpactEvents;
        public readonly EcsPool<HitPointMaxValueComponent> HitPointMaxValue;
        public readonly EcsPool<HitPointPercentValueComponent> HitPointPercentValue;
        public readonly EcsPool<HitPointValueComponent> HitPointValue;
        public readonly EcsPool<HitTakenEffectComponent> HitTakenEffect;
        public readonly EcsPool<ImpactAreaComponent> ImpactArea;
        public readonly EcsPool<InProgressTag<ActionDeathComponent>> InProgressActionDeath;
        public readonly EcsPool<InProgressTag<ActionIdleComponent>> InProgressActionIdle;
        public readonly EcsPool<InProgressTag<ActionMoveComponent>> InProgressActionMove;
        public readonly EcsPool<InProgressTag<ActionReviveComponent>> InProgressActionRevive;
        public readonly EcsPool<InProgressTag<AreaResetReceiversComponent>> InProgressAreaResetReceivers;
        public readonly EcsPool<InProgressTag<BehaviorTreeComponent>> InProgressBehaviorTree;
        public readonly EcsPool<InProgressTag<OutlinableComponent>> InProgressOutlinable;
        public readonly EcsPool<InProgressTag<ParentComponent>> InProgressParent;
        public readonly EcsPool<InProgressTag<PlayerControllerTag>> InProgressPlayerController;
        public readonly EcsPool<InProgressTag<PlayerInputMemoryComponent>> InProgressPlayerInputMemory;
        public readonly EcsPool<InProgressTag<ShotTriggerComponent>> InProgressShotTrigger;
        public readonly EcsPool<InProgressTag<ThroughProjectileSlotTag>> InProgressThroughProjectileSlot;
        public readonly EcsPool<InProgressTag<TouchWallTag>> InProgressTouchWall;
        public readonly EcsPool<InvulnerabilityLifetimeComponent> InvulnerabilityLifetime;
        public readonly EcsPool<LifetimeComponent> Lifetime;
        public readonly EcsPool<LivesValueComponent> LivesValue;
        public readonly EcsPool<LookOnTargetComponent> LookOnTarget;
        public readonly EcsPool<LStickTag> LStick;
        public readonly EcsPool<MagicGemSlotComponent> MagicGemSlot;
        public readonly EcsPool<MagnetAreaComponent> MagnetArea;
        public readonly EcsPool<MagnetTag> Magnet;
        public readonly EcsPool<ManaPointMaxValueComponent> ManaPointMaxValue;
        public readonly EcsPool<ManaPointValueComponent> ManaPointValue;
        public readonly EcsPool<MissileTag> Missile;
        public readonly EcsPool<MissileUpdateSpeedTag> MissileUpdateSpeed;
        public readonly EcsPool<ModulesComponent> Modules;
        public readonly EcsPool<MouseHoverTag> MouseHover;
        public readonly EcsPool<MousePressedTag> MousePressed;
        public readonly EcsPool<MoveDirectionComponent> MoveDirection;
        public readonly EcsPool<MoveSpeedValueComponent> MoveSpeedValue;
        public readonly EcsPool<NameValueComponent> NameValue;
        public readonly EcsPool<NestedEntitiesComponent> NestedEntities;
        public readonly EcsPool<NodeComponent> Node;
        public readonly EcsPool<NpcActionComponent> NpcAction;
        public readonly EcsPool<OnGroundTag> OnGround;
        public readonly EcsPool<OutlinableComponent> Outlinable;
        public readonly EcsPool<ParentComponent> Parent;
        public readonly EcsPool<PlatformCollisionControllerComponent> PlatformCollisionController;
        public readonly EcsPool<PlayerControllerTag> PlayerController;
        public readonly EcsPool<PlayerInputMemoryComponent> PlayerInputMemory;
        public readonly EcsPool<PlayerInRangeTag> PlayerInRange;
        public readonly EcsPool<PlayerUniqueTag> PlayerUnique;
        public readonly EcsPool<RandomSimpleItemTag> RandomSimpleItem;
        public readonly EcsPool<ReceiverAreaComponent> ReceiverArea;
        public readonly EcsPool<ReceiverClientComponent> ReceiverClient;
        public readonly EcsPool<ReceiverMagnetAreaComponent> ReceiverMagnetArea;
        public readonly EcsPool<RecoverySpeedValueComponent<HitPointValueComponent>> RecoverySpeedHitPointValue;
        public readonly EcsPool<RecoverySpeedValueComponent<ManaPointValueComponent>> RecoverySpeedManaPointValue;
        public readonly EcsPool<ReflectShieldPrefabComponent> ReflectShieldPrefab;
        public readonly EcsPool<RemoveOnDealDamageTag> RemoveOnDealDamage;
        public readonly EcsPool<RemoveOnTouchTag> RemoveOnTouch;
        public readonly EcsPool<RigidbodyComponent> Rigidbody;
        public readonly EcsPool<ScoreValueComponent> ScoreValue;
        public readonly EcsPool<ServicesUniqueTag> ServicesUnique;
        public readonly EcsPool<ShockWavePrefabComponent> ShockWavePrefab;
        public readonly EcsPool<ShockWaveSlotTag> ShockWaveSlot;
        public readonly EcsPool<ShockWaveValueComponent> ShockWaveValue;
        public readonly EcsPool<ShotTriggerComponent> ShotTrigger;
        public readonly EcsPool<SpawnOnHealthPercentComponent> SpawnOnHealthPercent;
        public readonly EcsPool<StackComponent> Stack;
        public readonly EcsPool<TargetComponent> Target;
        public readonly EcsPool<TargetInAgroRangeTag> TargetInAgroRange;
        public readonly EcsPool<TestSlotComponent> TestSlot;
        public readonly EcsPool<ThroughProjectileSlotTag> ThroughProjectileSlot;
        public readonly EcsPool<TouchWallTag> TouchWall;
        public readonly EcsPool<TransformCenterComponent> TransformCenter;
        public readonly EcsPool<TransformComponent> Transform;
        public readonly EcsPool<TripleJumpSlotTag> TripleJumpSlot;
        public readonly EcsPool<ValueData> ValueData;
        public readonly EcsPool<WakeupImpactResistanceComponent> WakeupImpactResistance;
        public readonly EcsPool<WeaponSlotComponent> WeaponSlot;
        public readonly EcsPool<WriteCommandsTag> WriteCommands;
        public readonly EcsPool<WriteDefaultsBeforeRemoveEntityComponent> WriteDefaultsBeforeRemoveEntity;
    
        public ComponentPools(EcsWorld world)
        {
            AbilitiesSlot = world.GetPool<AbilitiesSlotComponent>();
            ActionButton1 = world.GetPool<ActionButton1Component>();
            ActionButton2 = world.GetPool<ActionButton2Component>();
            ActionButton3 = world.GetPool<ActionButton3Component>();
            ActionButton4 = world.GetPool<ActionButton4Component>();
            ActionCurrent = world.GetPool<ActionCurrentComponent>();
            ActionDeath = world.GetPool<ActionDeathComponent>();
            ActionIdle = world.GetPool<ActionIdleComponent>();
            ActionMouseLeft = world.GetPool<ActionMouseLeftComponent>();
            ActionMouseRight = world.GetPool<ActionMouseRightComponent>();
            ActionMove = world.GetPool<ActionMoveComponent>();
            ActionRevive = world.GetPool<ActionReviveComponent>();
            ActiveAreaCollectableArea = world.GetPool<ActiveArea<CollectableAreaComponent>>();
            ActiveAreaDamageArea = world.GetPool<ActiveArea<DamageAreaComponent>>();
            ActiveAreaImpactArea = world.GetPool<ActiveArea<ImpactAreaComponent>>();
            ActiveAreaReceiverArea = world.GetPool<ActiveArea<ReceiverAreaComponent>>();
            AddScoreOnDeathValue = world.GetPool<AddScoreOnDeathValueComponent>();
            AngularSpeedValue = world.GetPool<AngularSpeedValueComponent>();
            Animator = world.GetPool<AnimatorComponent>();
            AnimatorState = world.GetPool<AnimatorStateComponent>();
            AreaResetReceivers = world.GetPool<AreaResetReceiversComponent>();
            AttackSpeedValue = world.GetPool<AttackSpeedValueComponent>();
            BaseAddScoreOnDeathValue = world.GetPool<BaseValueComponent<AddScoreOnDeathValueComponent>>();
            BaseAngularSpeedValue = world.GetPool<BaseValueComponent<AngularSpeedValueComponent>>();
            BaseAttackSpeedValue = world.GetPool<BaseValueComponent<AttackSpeedValueComponent>>();
            BaseCriticalChanceValue = world.GetPool<BaseValueComponent<CriticalChanceValueComponent>>();
            BaseCriticalDamageValue = world.GetPool<BaseValueComponent<CriticalDamageValueComponent>>();
            BaseDamageOrbValue = world.GetPool<BaseValueComponent<DamageOrbValueComponent>>();
            BaseDamagePercentValue = world.GetPool<BaseValueComponent<DamagePercentValueComponent>>();
            BaseDamageValue = world.GetPool<BaseValueComponent<DamageValueComponent>>();
            BaseDefenceValue = world.GetPool<BaseValueComponent<DefenceValueComponent>>();
            BaseEnergyMaxValue = world.GetPool<BaseValueComponent<EnergyMaxValueComponent>>();
            BaseEnergyValue = world.GetPool<BaseValueComponent<EnergyValueComponent>>();
            BaseExperienceValue = world.GetPool<BaseValueComponent<ExperienceValueComponent>>();
            BaseHealingPotionMaxValue = world.GetPool<BaseValueComponent<HealingPotionMaxValueComponent>>();
            BaseHealingPotionValue = world.GetPool<BaseValueComponent<HealingPotionValueComponent>>();
            BaseHitPointMaxValue = world.GetPool<BaseValueComponent<HitPointMaxValueComponent>>();
            BaseHitPointPercentValue = world.GetPool<BaseValueComponent<HitPointPercentValueComponent>>();
            BaseHitPointValue = world.GetPool<BaseValueComponent<HitPointValueComponent>>();
            BaseLivesValue = world.GetPool<BaseValueComponent<LivesValueComponent>>();
            BaseManaPointMaxValue = world.GetPool<BaseValueComponent<ManaPointMaxValueComponent>>();
            BaseManaPointValue = world.GetPool<BaseValueComponent<ManaPointValueComponent>>();
            BaseMoveSpeedValue = world.GetPool<BaseValueComponent<MoveSpeedValueComponent>>();
            BaseRecoverySpeedHitPointValue = world.GetPool<BaseValueComponent<RecoverySpeedValueComponent<HitPointValueComponent>>>();
            BaseRecoverySpeedManaPointValue = world.GetPool<BaseValueComponent<RecoverySpeedValueComponent<ManaPointValueComponent>>>();
            BaseScoreValue = world.GetPool<BaseValueComponent<ScoreValueComponent>>();
            BaseShockWaveValue = world.GetPool<BaseValueComponent<ShockWaveValueComponent>>();
            BehaviorTree = world.GetPool<BehaviorTreeComponent>();
            BehaviourActivateArea = world.GetPool<BehaviourActivateAreaComponent>();
            ButtonDash = world.GetPool<ButtonDashTag>();
            ButtonDown = world.GetPool<ButtonDown>();
            ButtonHorizontal = world.GetPool<ButtonHorizontalTag>();
            ButtonJump = world.GetPool<ButtonJumpTag>();
            ButtonLeft = world.GetPool<ButtonLeft>();
            ButtonLightAttack = world.GetPool<ButtonLightAttackTag>();
            ButtonRight = world.GetPool<ButtonRight>();
            ButtonStrongAttack = world.GetPool<ButtonStrongAttackTag>();
            ButtonUp = world.GetPool<ButtonUp>();
            ButtonUseHealing = world.GetPool<ButtonUseHealing>();
            CharacterController = world.GetPool<CharacterControllerComponent>();
            CollectableArea = world.GetPool<CollectableAreaComponent>();
            CollectableExperience = world.GetPool<CollectableExperienceComponent>();
            CollectableGem = world.GetPool<CollectableGemComponent>();
            CollectableHealing = world.GetPool<CollectableHealingComponent>();
            CollectableItem = world.GetPool<CollectableItemComponent>();
            CollectableKeyGold = world.GetPool<CollectableKeyGoldComponent>();
            CollectableKeySilver = world.GetPool<CollectableKeySilverComponent>();
            CollectableLiveUp = world.GetPool<CollectableLiveUpTag>();
            CollectablePowerUp = world.GetPool<CollectablePowerUpTag>();
            CriticalChanceValue = world.GetPool<CriticalChanceValueComponent>();
            CriticalDamageValue = world.GetPool<CriticalDamageValueComponent>();
            DamageArea = world.GetPool<DamageAreaComponent>();
            DamageOrb = world.GetPool<DamageOrbComponent>();
            DamageOrbParent = world.GetPool<DamageOrbParentComponent>();
            DamageOrbPrefab = world.GetPool<DamageOrbPrefabComponent>();
            DamageOrbSlot = world.GetPool<DamageOrbSlotTag>();
            DamageOrbValue = world.GetPool<DamageOrbValueComponent>();
            DamagePercentValue = world.GetPool<DamagePercentValueComponent>();
            DamageScale = world.GetPool<DamageScaleComponent>();
            DamageValue = world.GetPool<DamageValueComponent>();
            DeathOnDealDamage = world.GetPool<DeathOnDealDamageTag>();
            DeathOnTouch = world.GetPool<DeathOnTouchTag>();
            DebugEnemy = world.GetPool<DebugEnemyTag>();
            DefenceValue = world.GetPool<DefenceValueComponent>();
            DependsByExternalLevel = world.GetPool<DependsByExternalLevelTag>();
            Direction = world.GetPool<DirectionComponent>();
            DoubleJumpSlot = world.GetPool<DoubleJumpSlotTag>();
            DropOnDeath = world.GetPool<DropOnDeathComponent>();
            Enemy = world.GetPool<EnemyTag>();
            EnergyMaxValue = world.GetPool<EnergyMaxValueComponent>();
            EnergyValue = world.GetPool<EnergyValueComponent>();
            EnhancementSlot = world.GetPool<EnhancementSlotComponent>();
            EventActionComplete = world.GetPool<EventActionComplete>();
            EventStartActionDeath = world.GetPool<EventActionStart<ActionDeathComponent>>();
            EventStartActionIdle = world.GetPool<EventActionStart<ActionIdleComponent>>();
            EventStartActionMove = world.GetPool<EventActionStart<ActionMoveComponent>>();
            EventStartActionRevive = world.GetPool<EventActionStart<ActionReviveComponent>>();
            EventStartNpcAction = world.GetPool<EventActionStart<NpcActionComponent>>();
            EventBehaviorTreeActionStartFailedCheck = world.GetPool<EventBehaviorTreeActionStartFailedCheck>();
            EventBehaviorTreeActivate = world.GetPool<EventBehaviorTreeActivate>();
            EventBehaviorTreeDeactivate = world.GetPool<EventBehaviorTreeDeactivate>();
            EventBuildEntity = world.GetPool<EventBuildEntity>();
            EventButtonCanceledButtonLightAttack = world.GetPool<EventButtonCanceled<ButtonLightAttackTag>>();
            EventButtonCanceledButtonStrongAttack = world.GetPool<EventButtonCanceled<ButtonStrongAttackTag>>();
            EventButtonPerformedButtonDash = world.GetPool<EventButtonPerformed<ButtonDashTag>>();
            EventButtonPerformedButtonJump = world.GetPool<EventButtonPerformed<ButtonJumpTag>>();
            EventButtonPerformedButtonLightAttack = world.GetPool<EventButtonPerformed<ButtonLightAttackTag>>();
            EventButtonPerformedButtonStrongAttack = world.GetPool<EventButtonPerformed<ButtonStrongAttackTag>>();
            EventButtonPerformedButtonUseHealing = world.GetPool<EventButtonPerformed<ButtonUseHealing>>();
            EventCameraShake = world.GetPool<EventCameraShakeComponent>();
            EventCancelProgressShotTrigger = world.GetPool<EventCancelProgress<ShotTriggerComponent>>();
            EventCausedDamage = world.GetPool<EventCausedDamage>();
            EventDamageTaken = world.GetPool<EventDamageTaken>();
            EventDeath = world.GetPool<EventDeath>();
            EventDeTouchWall = world.GetPool<EventDeTouchWall>();
            EventEnableOutlinable = world.GetPool<EventEnableOutlinable>();
            EventFreezing = world.GetPool<EventFreezing>();
            EventHitTaken = world.GetPool<EventHitTaken>();
            EventImpactVelocity = world.GetPool<EventImpactVelocity>();
            EventIncomingDamage = world.GetPool<EventIncomingDamage>();
            EventInit = world.GetPool<EventInit>();
            EventInteractionTargetClick = world.GetPool<EventInteractionTargetClick>();
            EventKnockback = world.GetPool<EventKnockback>();
            EventKnockdown = world.GetPool<EventKnockdown>();
            EventLanding = world.GetPool<EventLanding>();
            EventLaunching = world.GetPool<EventLaunching>();
            EventMagnetAreaTouch = world.GetPool<EventMagnetAreaTouch>();
            EventRefreshAbilitiesSlot = world.GetPool<EventRefreshSlot<AbilitiesSlotComponent>>();
            EventRefreshEnhancementSlot = world.GetPool<EventRefreshSlot<EnhancementSlotComponent>>();
            EventRefreshMagicGemSlot = world.GetPool<EventRefreshSlot<MagicGemSlotComponent>>();
            EventRefreshTestSlot = world.GetPool<EventRefreshSlot<TestSlotComponent>>();
            EventRefreshWeaponSlot = world.GetPool<EventRefreshSlot<WeaponSlotComponent>>();
            EventRemoveEntity = world.GetPool<EventRemoveEntity>();
            EventRestoreConsumables = world.GetPool<EventRestoreConsumables>();
            EventScanHierarchyForNestedEntities = world.GetPool<EventScanHierarchyForNestedEntities>();
            EventSelectEnemyTarget = world.GetPool<EventSelectEnemyTarget>();
            EventSetupForwardVelocity = world.GetPool<EventSetupForwardVelocity>();
            EventSetupModuleShotTrigger = world.GetPool<EventSetupModule<ShotTriggerComponent>>();
            EventSetupParentThroughProjectileSlot = world.GetPool<EventSetupParentComponent<ThroughProjectileSlotTag>>();
            EventSetupParentValueCriticalChanceValue = world.GetPool<EventSetupParentValue<CriticalChanceValueComponent>>();
            EventSetupParentValueCriticalDamageValue = world.GetPool<EventSetupParentValue<CriticalDamageValueComponent>>();
            EventSetupParentValueDamageValue = world.GetPool<EventSetupParentValue<DamageValueComponent>>();
            EventSetupVelocity = world.GetPool<EventSetupVelocity>();
            EventSlash = world.GetPool<EventSlash>();
            EventStartProgressShotTrigger = world.GetPool<EventStartProgress<ShotTriggerComponent>>();
            EventStartRecalculateAddScoreOnDeathValue = world.GetPool<EventStartRecalculateValue<AddScoreOnDeathValueComponent>>();
            EventStartRecalculateAngularSpeedValue = world.GetPool<EventStartRecalculateValue<AngularSpeedValueComponent>>();
            EventStartRecalculateAttackSpeedValue = world.GetPool<EventStartRecalculateValue<AttackSpeedValueComponent>>();
            EventStartRecalculateCriticalChanceValue = world.GetPool<EventStartRecalculateValue<CriticalChanceValueComponent>>();
            EventStartRecalculateCriticalDamageValue = world.GetPool<EventStartRecalculateValue<CriticalDamageValueComponent>>();
            EventStartRecalculateDamageOrbValue = world.GetPool<EventStartRecalculateValue<DamageOrbValueComponent>>();
            EventStartRecalculateDamagePercentValue = world.GetPool<EventStartRecalculateValue<DamagePercentValueComponent>>();
            EventStartRecalculateDamageValue = world.GetPool<EventStartRecalculateValue<DamageValueComponent>>();
            EventStartRecalculateDefenceValue = world.GetPool<EventStartRecalculateValue<DefenceValueComponent>>();
            EventStartRecalculateEnergyMaxValue = world.GetPool<EventStartRecalculateValue<EnergyMaxValueComponent>>();
            EventStartRecalculateEnergyValue = world.GetPool<EventStartRecalculateValue<EnergyValueComponent>>();
            EventStartRecalculateExperienceValue = world.GetPool<EventStartRecalculateValue<ExperienceValueComponent>>();
            EventStartRecalculateHealingPotionMaxValue = world.GetPool<EventStartRecalculateValue<HealingPotionMaxValueComponent>>();
            EventStartRecalculateHealingPotionValue = world.GetPool<EventStartRecalculateValue<HealingPotionValueComponent>>();
            EventStartRecalculateHitPointMaxValue = world.GetPool<EventStartRecalculateValue<HitPointMaxValueComponent>>();
            EventStartRecalculateHitPointPercentValue = world.GetPool<EventStartRecalculateValue<HitPointPercentValueComponent>>();
            EventStartRecalculateHitPointValue = world.GetPool<EventStartRecalculateValue<HitPointValueComponent>>();
            EventStartRecalculateLivesValue = world.GetPool<EventStartRecalculateValue<LivesValueComponent>>();
            EventStartRecalculateManaPointMaxValue = world.GetPool<EventStartRecalculateValue<ManaPointMaxValueComponent>>();
            EventStartRecalculateManaPointValue = world.GetPool<EventStartRecalculateValue<ManaPointValueComponent>>();
            EventStartRecalculateMoveSpeedValue = world.GetPool<EventStartRecalculateValue<MoveSpeedValueComponent>>();
            EventStartRecalculateReceiverClient = world.GetPool<EventStartRecalculateValue<ReceiverClientComponent>>();
            EventStartRecalculateRecoverySpeedHitPointValue = world.GetPool<EventStartRecalculateValue<RecoverySpeedValueComponent<HitPointValueComponent>>>();
            EventStartRecalculateRecoverySpeedManaPointValue = world.GetPool<EventStartRecalculateValue<RecoverySpeedValueComponent<ManaPointValueComponent>>>();
            EventStartRecalculateScoreValue = world.GetPool<EventStartRecalculateValue<ScoreValueComponent>>();
            EventStartRecalculateShockWaveValue = world.GetPool<EventStartRecalculateValue<ShockWaveValueComponent>>();
            EventTimeDilation = world.GetPool<EventTimeDilation>();
            EventTimelineAction = world.GetPool<EventTimelineAction>();
            EventTouchWall = world.GetPool<EventTouchWall>();
            EventUpdatedAddScoreOnDeathValue = world.GetPool<EventValueUpdated<AddScoreOnDeathValueComponent>>();
            EventUpdatedAngularSpeedValue = world.GetPool<EventValueUpdated<AngularSpeedValueComponent>>();
            EventUpdatedAttackSpeedValue = world.GetPool<EventValueUpdated<AttackSpeedValueComponent>>();
            EventUpdatedCriticalChanceValue = world.GetPool<EventValueUpdated<CriticalChanceValueComponent>>();
            EventUpdatedCriticalDamageValue = world.GetPool<EventValueUpdated<CriticalDamageValueComponent>>();
            EventUpdatedDamageOrbValue = world.GetPool<EventValueUpdated<DamageOrbValueComponent>>();
            EventUpdatedDamagePercentValue = world.GetPool<EventValueUpdated<DamagePercentValueComponent>>();
            EventUpdatedDamageValue = world.GetPool<EventValueUpdated<DamageValueComponent>>();
            EventUpdatedDefenceValue = world.GetPool<EventValueUpdated<DefenceValueComponent>>();
            EventUpdatedEnergyMaxValue = world.GetPool<EventValueUpdated<EnergyMaxValueComponent>>();
            EventUpdatedEnergyValue = world.GetPool<EventValueUpdated<EnergyValueComponent>>();
            EventUpdatedExperienceValue = world.GetPool<EventValueUpdated<ExperienceValueComponent>>();
            EventUpdatedHealingPotionMaxValue = world.GetPool<EventValueUpdated<HealingPotionMaxValueComponent>>();
            EventUpdatedHealingPotionValue = world.GetPool<EventValueUpdated<HealingPotionValueComponent>>();
            EventUpdatedHitPointMaxValue = world.GetPool<EventValueUpdated<HitPointMaxValueComponent>>();
            EventUpdatedHitPointPercentValue = world.GetPool<EventValueUpdated<HitPointPercentValueComponent>>();
            EventUpdatedHitPointValue = world.GetPool<EventValueUpdated<HitPointValueComponent>>();
            EventUpdatedLivesValue = world.GetPool<EventValueUpdated<LivesValueComponent>>();
            EventUpdatedManaPointMaxValue = world.GetPool<EventValueUpdated<ManaPointMaxValueComponent>>();
            EventUpdatedManaPointValue = world.GetPool<EventValueUpdated<ManaPointValueComponent>>();
            EventUpdatedMoveSpeedValue = world.GetPool<EventValueUpdated<MoveSpeedValueComponent>>();
            EventUpdatedRecoverySpeedHitPointValue = world.GetPool<EventValueUpdated<RecoverySpeedValueComponent<HitPointValueComponent>>>();
            EventUpdatedRecoverySpeedManaPointValue = world.GetPool<EventValueUpdated<RecoverySpeedValueComponent<ManaPointValueComponent>>>();
            EventUpdatedScoreValue = world.GetPool<EventValueUpdated<ScoreValueComponent>>();
            EventUpdatedShockWaveValue = world.GetPool<EventValueUpdated<ShockWaveValueComponent>>();
            EventVirtualCameraFollowSetup = world.GetPool<EventVirtualCameraFollowSetup>();
            ExperienceValue = world.GetPool<ExperienceValueComponent>();
            ForceRefreshTarget = world.GetPool<ForceRefreshTargetComponent>();
            Freezing = world.GetPool<FreezingComponent>();
            Friend = world.GetPool<FriendTag>();
            HealingPotionMaxValue = world.GetPool<HealingPotionMaxValueComponent>();
            HealingPotionValue = world.GetPool<HealingPotionValueComponent>();
            HitBlink = world.GetPool<HitBlinkComponent>();
            HitEffectSprite = world.GetPool<HitEffectSpriteComponent>();
            HitImpactEvents = world.GetPool<HitImpactEventsComponent>();
            HitPointMaxValue = world.GetPool<HitPointMaxValueComponent>();
            HitPointPercentValue = world.GetPool<HitPointPercentValueComponent>();
            HitPointValue = world.GetPool<HitPointValueComponent>();
            HitTakenEffect = world.GetPool<HitTakenEffectComponent>();
            ImpactArea = world.GetPool<ImpactAreaComponent>();
            InProgressActionDeath = world.GetPool<InProgressTag<ActionDeathComponent>>();
            InProgressActionIdle = world.GetPool<InProgressTag<ActionIdleComponent>>();
            InProgressActionMove = world.GetPool<InProgressTag<ActionMoveComponent>>();
            InProgressActionRevive = world.GetPool<InProgressTag<ActionReviveComponent>>();
            InProgressAreaResetReceivers = world.GetPool<InProgressTag<AreaResetReceiversComponent>>();
            InProgressBehaviorTree = world.GetPool<InProgressTag<BehaviorTreeComponent>>();
            InProgressOutlinable = world.GetPool<InProgressTag<OutlinableComponent>>();
            InProgressParent = world.GetPool<InProgressTag<ParentComponent>>();
            InProgressPlayerController = world.GetPool<InProgressTag<PlayerControllerTag>>();
            InProgressPlayerInputMemory = world.GetPool<InProgressTag<PlayerInputMemoryComponent>>();
            InProgressShotTrigger = world.GetPool<InProgressTag<ShotTriggerComponent>>();
            InProgressThroughProjectileSlot = world.GetPool<InProgressTag<ThroughProjectileSlotTag>>();
            InProgressTouchWall = world.GetPool<InProgressTag<TouchWallTag>>();
            InvulnerabilityLifetime = world.GetPool<InvulnerabilityLifetimeComponent>();
            Lifetime = world.GetPool<LifetimeComponent>();
            LivesValue = world.GetPool<LivesValueComponent>();
            LookOnTarget = world.GetPool<LookOnTargetComponent>();
            LStick = world.GetPool<LStickTag>();
            MagicGemSlot = world.GetPool<MagicGemSlotComponent>();
            MagnetArea = world.GetPool<MagnetAreaComponent>();
            Magnet = world.GetPool<MagnetTag>();
            ManaPointMaxValue = world.GetPool<ManaPointMaxValueComponent>();
            ManaPointValue = world.GetPool<ManaPointValueComponent>();
            Missile = world.GetPool<MissileTag>();
            MissileUpdateSpeed = world.GetPool<MissileUpdateSpeedTag>();
            Modules = world.GetPool<ModulesComponent>();
            MouseHover = world.GetPool<MouseHoverTag>();
            MousePressed = world.GetPool<MousePressedTag>();
            MoveDirection = world.GetPool<MoveDirectionComponent>();
            MoveSpeedValue = world.GetPool<MoveSpeedValueComponent>();
            NameValue = world.GetPool<NameValueComponent>();
            NestedEntities = world.GetPool<NestedEntitiesComponent>();
            Node = world.GetPool<NodeComponent>();
            NpcAction = world.GetPool<NpcActionComponent>();
            OnGround = world.GetPool<OnGroundTag>();
            Outlinable = world.GetPool<OutlinableComponent>();
            Parent = world.GetPool<ParentComponent>();
            PlatformCollisionController = world.GetPool<PlatformCollisionControllerComponent>();
            PlayerController = world.GetPool<PlayerControllerTag>();
            PlayerInputMemory = world.GetPool<PlayerInputMemoryComponent>();
            PlayerInRange = world.GetPool<PlayerInRangeTag>();
            PlayerUnique = world.GetPool<PlayerUniqueTag>();
            RandomSimpleItem = world.GetPool<RandomSimpleItemTag>();
            ReceiverArea = world.GetPool<ReceiverAreaComponent>();
            ReceiverClient = world.GetPool<ReceiverClientComponent>();
            ReceiverMagnetArea = world.GetPool<ReceiverMagnetAreaComponent>();
            RecoverySpeedHitPointValue = world.GetPool<RecoverySpeedValueComponent<HitPointValueComponent>>();
            RecoverySpeedManaPointValue = world.GetPool<RecoverySpeedValueComponent<ManaPointValueComponent>>();
            ReflectShieldPrefab = world.GetPool<ReflectShieldPrefabComponent>();
            RemoveOnDealDamage = world.GetPool<RemoveOnDealDamageTag>();
            RemoveOnTouch = world.GetPool<RemoveOnTouchTag>();
            Rigidbody = world.GetPool<RigidbodyComponent>();
            ScoreValue = world.GetPool<ScoreValueComponent>();
            ServicesUnique = world.GetPool<ServicesUniqueTag>();
            ShockWavePrefab = world.GetPool<ShockWavePrefabComponent>();
            ShockWaveSlot = world.GetPool<ShockWaveSlotTag>();
            ShockWaveValue = world.GetPool<ShockWaveValueComponent>();
            ShotTrigger = world.GetPool<ShotTriggerComponent>();
            SpawnOnHealthPercent = world.GetPool<SpawnOnHealthPercentComponent>();
            Stack = world.GetPool<StackComponent>();
            Target = world.GetPool<TargetComponent>();
            TargetInAgroRange = world.GetPool<TargetInAgroRangeTag>();
            TestSlot = world.GetPool<TestSlotComponent>();
            ThroughProjectileSlot = world.GetPool<ThroughProjectileSlotTag>();
            TouchWall = world.GetPool<TouchWallTag>();
            TransformCenter = world.GetPool<TransformCenterComponent>();
            Transform = world.GetPool<TransformComponent>();
            TripleJumpSlot = world.GetPool<TripleJumpSlotTag>();
            ValueData = world.GetPool<ValueData>();
            WakeupImpactResistance = world.GetPool<WakeupImpactResistanceComponent>();
            WeaponSlot = world.GetPool<WeaponSlotComponent>();
            WriteCommands = world.GetPool<WriteCommandsTag>();
            WriteDefaultsBeforeRemoveEntity = world.GetPool<WriteDefaultsBeforeRemoveEntityComponent>();
        }
    }
}